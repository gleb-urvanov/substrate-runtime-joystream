name: network-tests
on: [pull_request, push]

jobs:
#  network_build_ubuntu:
#    name: Ubuntu Checks
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [12.x]
#    steps:
#    - uses: actions/checkout@v1
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v1
#      with:
#        node-version: ${{ matrix.node-version }}
#    - name: checks
#      run: |
#        yarn install --frozen-lockfile
#        yarn workspace joystream-testing checks
#
#  network_build_osx:
#    name: MacOS Checks
#    runs-on: macos-latest
#    strategy:
#      matrix:
#        node-version: [12.x]
#    steps:
#    - uses: actions/checkout@v1
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v1
#      with:
#        node-version: ${{ matrix.node-version }}
#    - name: checks
#      run: |
#        yarn install --frozen-lockfile --network-timeout 120000
#        yarn workspace joystream-testing checks

#  build_node:
#    name: Build node
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [12.x]
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#      - uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: install toolchain
#        run: curl https://getsubstrate.io -sSf | bash -s -- --fast
#      - uses: actions-rs/cargo@v1
#        with:
#          command: build
#          args: --release --verbose

  run_ansible_tests:
    name: run network tests using ansible
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install toolchain
        run: curl https://getsubstrate.io -sSf | bash -s -- --fast
#      - name: ansible build and tests
#        run: |
#          cd ./devops/ansible
#          ansible-playbook -i hosts build-and-run-tests-single-node-playbook.yml --become -v
      - name: create test chaispec
        run: ./script/create-test-chainspec.sh
